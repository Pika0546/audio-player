{"version":3,"sources":["audio/Perfect Two 1.jpg","audio/Perfect.jpg","audio/Little Do You Know 1.png","components/Menu.js","components/Header.js","components/AudioControls.js","components/AudioPlayer.js","audio/Perfect Two.mp3","audio/Perfect.mp3","audio/Little Do You Know.mp3","tracks.js","App.js","index.js"],"names":["Menu","tracks","index","changeIndex","isPlay","playlist","map","audio","pos","className","onClick","src","img","default","alt","title","artist","e","stopPropagation","href","download","Header","onChangeTrack","useState","isOpenMenu","setIsOpenMenu","closeMenu","target","closest","useEffect","document","addEventListener","removeEventListener","AudioControls","isPlaying","playMode","onPlayPauseClick","onPrevClick","onNextClick","onRandClick","onReClick","AudioPlayer","onChangePlay","trackIndex","settrackIndex","trackProgress","setTrackProgress","setIsPlaying","setPlayMode","duration","setDuration","audioRef","useRef","intervalRef","startTimer","clearInterval","current","setInterval","ended","currentTime","console","log","play","pause","nextIndex","min","max","length","Math","floor","random","onScrubEnd","ref","loop","onEnded","onLoadedData","substr","type","value","step","onChange","onMouseUp","onKeyUp","status","PerfectTwo","require","Perfect","LittleDoYouKnow","App","setIndex","setIsPlay","newIndex","newIsPlay","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51dfa2ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Perfect Two 1.9d286ccc.jpg\";","export default __webpack_public_path__ + \"static/media/Perfect.fd8701d3.jpg\";","export default __webpack_public_path__ + \"static/media/Little Do You Know 1.c3c65b98.png\";","import React from 'react'\r\n\r\nconst Menu = ({tracks, index, changeIndex, isPlay}) => {\r\n\r\n    const playlist = tracks.map((audio, pos)=>{\r\n        return(\r\n            <div \r\n                key={pos} \r\n                className={\r\n                        \"menu__audio\" + \r\n                        (pos === index ? \" menu__audio--current\": \"\") +\r\n                        ((pos === index && isPlay === true) ? \" menu__audio--play\": \"\")\r\n                    } \r\n                onClick={()=>{\r\n                    changeIndex(pos);\r\n                }}\r\n            >\r\n                <div className=\"menu__audio__img\">\r\n                    <img src={audio.img.default} alt={audio.title}></img>\r\n                    <div className=\"menu__audio__img--overlay\">\r\n                        <i className=\"fas fa-play\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu__audio__info\">\r\n                    <span>{audio.title}</span>\r\n                    <span>{audio.artist}</span>\r\n                </div>\r\n                <button\r\n                    onClick={(e)=>{\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <a href={audio.src} download={audio.title}>\r\n                        <i className=\"fas fa-download\"></i>\r\n                    </a>\r\n                </button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <h3>Playlist</h3>\r\n            {playlist}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport Menu from './Menu'\r\nimport { useState, useEffect} from 'react';\r\nconst Header = ({tracks, index, onChangeTrack, isPlay}) => {\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n\r\n    const closeMenu = (e)=>{\r\n        if(!e.target.closest(\".menu__audio\") && !e.target.closest(\".header__button\")){\r\n            setIsOpenMenu(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener( \"click\", closeMenu, false);\r\n        return () => {\r\n            document.removeEventListener(\"click\", closeMenu, false);\r\n        }\r\n    }, [])\r\n\r\n    const changeIndex = (index) => {\r\n        setIsOpenMenu(false);\r\n        onChangeTrack(index);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"place-holder\"></span>\r\n            <h3 className=\"header__title\">Now Playing</h3>\r\n            <button \r\n                className=\"header__button open-playlist\"\r\n                onClick={()=>{setIsOpenMenu(!isOpenMenu)}}\r\n            >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </button>\r\n\t\t\t{isOpenMenu && <Menu tracks={tracks} isPlay={isPlay} index = {index} changeIndex={changeIndex}></Menu>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst AudioControls = ({\r\n    isPlaying,\r\n    playMode,\r\n    onPlayPauseClick,\r\n    onPrevClick,\r\n    onNextClick,\r\n    onRandClick,\r\n    onReClick\r\n  }) => {\r\n    return (\r\n        <div className=\"control\">\r\n           \r\n            <button \r\n                className={\"control__button --level-1\" + ((playMode === -1) ? \" active\" : \"\")}\r\n                onClick = {onRandClick}\r\n            >\r\n                <i className=\"fas fa-random\"></i>            \r\n            </button>\r\n\r\n            <button \r\n                className=\"control__button --level-2\"\r\n                onClick = {onPrevClick}\r\n            >\r\n                <i className=\"fas fa-backward\"></i>\r\n            </button>\r\n\r\n            {isPlaying ? (\r\n                <button \r\n                    className=\"control__button --level-3\"\r\n                    onClick={()=>{onPlayPauseClick(false)}}\r\n                >\r\n                    <i className=\"fas fa-pause\"></i>\r\n                </button>\r\n\r\n            ):(\r\n                <button \r\n                    className=\"control__button --level-3\"\r\n                    onClick={()=>{onPlayPauseClick(true)}}\r\n                >\r\n                    <i className=\"fas fa-play\"></i>\r\n                </button>\r\n\r\n            )}\r\n\r\n             <button \r\n                className=\"control__button --level-2\"\r\n                onClick = {onNextClick}\r\n            >\r\n                <i className=\"fas fa-forward\"></i>\r\n            </button>\r\n\r\n            <button \r\n                className={\"control__button --level-1\" + ((playMode === 1) ? \" active\" : \"\")}\r\n                onClick = {onReClick}\r\n            >\r\n                <i className=\"fas fa-redo-alt\"></i>     \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AudioControls\r\n","import React from 'react'\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport AudioControls from './AudioControls'\r\n\r\nconst AudioPlayer = ({tracks, index, onChangePlay}) => {\r\n    const [trackIndex, settrackIndex] = useState(0);\r\n    const [trackProgress, setTrackProgress] = useState(0);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [playMode, setPlayMode] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n\r\n    const audioRef = useRef(null);\r\n    const intervalRef = useRef(null);\r\n    // const isReady = useRef(false);\r\n    const  getRndInteger = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n    }\r\n\r\n    const startTimer = () => {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = setInterval(() => {\r\n            if (audioRef.current.ended) {\r\n                \r\n            } else {\r\n                setTrackProgress(audioRef.current.currentTime || 0);\r\n                // console.log(audioRef.current.currentTime);\r\n            }\r\n            \r\n        }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"playing\");\r\n        if (isPlaying) {\r\n            audioRef.current.play();\r\n            startTimer();\r\n        } else {\r\n            clearInterval(intervalRef.current);\r\n            audioRef.current.pause();\r\n        }\r\n    }, [isPlaying]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(trackProgress);\r\n    //     console.log((\"00\" + Math.floor(Math.floor(trackProgress)/60)).substr(-2) + \":\" + (\"00\" + (Math.floor(trackProgress)%60)).substr(-2));\r\n\r\n    //     // console.log((Math.floor(trackProgress)%60));\r\n    //     // console.log(getSecond(trackProgress));\r\n    // }, [trackProgress])\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            audioRef.current.play();\r\n            startTimer();\r\n        } else {\r\n            clearInterval(intervalRef.current);\r\n            audioRef.current.pause();\r\n        }\r\n      \r\n        setTrackProgress(0);\r\n    }, [trackIndex])\r\n   \r\n    useEffect(()=>{\r\n        settrackIndex(index);\r\n    }, [index])\r\n\r\n    useEffect(() => {\r\n       \r\n        return () => {\r\n            clearInterval(intervalRef.current);\r\n            audioRef.current.pause();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"rerendered\");\r\n    })\r\n\r\n    const onLoaded = () => {\r\n        setDuration(audioRef.current.duration);\r\n    }\r\n\r\n    const onPlayPauseClick = (status) =>{\r\n        setIsPlaying(status);\r\n        onChangePlay(status);\r\n    };\r\n\r\n    const onPrevClick = () => {\r\n        if(trackIndex === 0){\r\n            settrackIndex(tracks.length - 1);\r\n        }\r\n        else{\r\n            settrackIndex(trackIndex - 1);\r\n        }\r\n    };\r\n\r\n    const onNextClick = () => {\r\n        if(playMode === -1){\r\n            let nextIndex = trackIndex;\r\n            while(nextIndex === trackIndex){\r\n                nextIndex = getRndInteger(0, tracks.length - 1);\r\n            };\r\n            settrackIndex(nextIndex);\r\n        }\r\n        else{\r\n            if(trackIndex === tracks.length - 1){\r\n                settrackIndex(0); \r\n                setIsPlaying(false);\r\n                onChangePlay(false);\r\n            }\r\n            else{\r\n                settrackIndex(trackIndex + 1);\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    const onRandClick = () => {\r\n        if(playMode === -1){\r\n            setPlayMode(0);\r\n        }else{\r\n            setPlayMode(-1);\r\n        }\r\n        audioRef.current.loop = false;\r\n      \r\n    };\r\n\r\n    const onReClick = () => {\r\n        if(playMode === 1){\r\n            audioRef.current.loop = false;\r\n            setPlayMode(0);\r\n        }else{\r\n            setPlayMode(1);\r\n            audioRef.current.loop = true;\r\n        }\r\n        \r\n    };\r\n\r\n    const onEndedAudio = () => {\r\n        onNextClick();\r\n    };\r\n\r\n    const onScrub = (value) => {\r\n            // Clear any timers already running\r\n        clearInterval(intervalRef.current);\r\n        \r\n        setTrackProgress(value);\r\n    }\r\n    \r\n    const onScrubEnd = () => {\r\n        // If not already playing, start\r\n        audioRef.current.currentTime = trackProgress;\r\n        //   if (!isPlaying) {\r\n        //     setIsPlaying(true);\r\n        //   }\r\n        if(isPlaying){\r\n            startTimer();\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n             <audio\r\n                ref={audioRef}\r\n                src={tracks[trackIndex].src}\r\n                loop={false}\r\n                onEnded={onEndedAudio}\r\n                onLoadedData={onLoaded}\r\n            />\r\n           \r\n            <div className=\"audio\">\r\n                <div className=\"audio__img--wrapper\">\r\n                    <img src={tracks[trackIndex].img.default} alt={tracks[trackIndex].title}></img>\r\n                </div>\r\n                <div className=\"audio__info\">\r\n                    <h1>{ \"#\" + (trackIndex + 1) + \" - \" + tracks[trackIndex].title}</h1>\r\n                    <h3>{tracks[trackIndex].artist}</h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"progress__wrapper\">\r\n                <span>{\r\n                    (\"00\" + Math.floor(Math.floor(trackProgress)/60)).substr(-2) + \":\"\r\n                     + (\"00\" + (Math.floor(trackProgress)%60)).substr(-2)\r\n                }</span>\r\n                <input\r\n                    type=\"range\"\r\n                    value={trackProgress}\r\n                    step=\"1\"\r\n                    min=\"0\"\r\n                    max={duration}\r\n                    className=\"progress\"\r\n                    onChange={(e) => onScrub(e.target.value)}\r\n                    onMouseUp={onScrubEnd}\r\n                    onKeyUp={onScrubEnd}\r\n                />\r\n                  <span>{\r\n                    (\"00\" + Math.floor(Math.floor(duration)/60)).substr(-2) + \":\"\r\n                    + (\"00\" + (Math.floor((duration)%60))).substr(-2)              \r\n                }</span>\r\n            </div>\r\n  \r\n\r\n            <AudioControls \r\n                isPlaying={isPlaying} \r\n                playMode = {playMode}\r\n                onPlayPauseClick = {onPlayPauseClick}\r\n                onPrevClick = {onPrevClick}\r\n                onNextClick = {onNextClick}\r\n                onRandClick = {onRandClick}\r\n                onReClick = {onReClick}\r\n            ></AudioControls>\r\n           \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AudioPlayer\r\n","export default __webpack_public_path__ + \"static/media/Perfect Two.dbf4257a.mp3\";","export default __webpack_public_path__ + \"static/media/Perfect.d2a0cf88.mp3\";","export default __webpack_public_path__ + \"static/media/Little Do You Know.620329d4.mp3\";","import PerfectTwo from './audio/Perfect Two.mp3'\r\nimport Perfect from './audio/Perfect.mp3'\r\nimport LittleDoYouKnow from './audio/Little Do You Know.mp3'\r\nconst tracks = [\r\n    {\r\n        title: \"Perfect two\",\r\n        artist: \"Auburn\",\r\n        src: PerfectTwo,\r\n        img: require(\"./audio/Perfect Two 1.jpg\")\r\n    },\r\n    {\r\n        title: \"Perfect\",\r\n        artist: \"Ed Sheeran\",\r\n        src: Perfect,\r\n        img: require(\"./audio/Perfect.jpg\")\r\n    },\r\n    {\r\n        title: \"Little do you know\",\r\n        artist: \"Auburn\",\r\n        src:LittleDoYouKnow,\r\n        img: require(\"./audio/Little Do You Know 1.png\")\r\n    },\r\n\r\n]\r\nexport default tracks","import React from 'react'\n\nimport Header from './components/Header'\nimport AudioPlayer from './components/AudioPlayer'\n\nimport './App.scss';\nimport tracks from './tracks'\nimport { useState} from 'react';\n\nconst App = () => {\n\tconst [index, setIndex] = useState(0);\n\tconst [isPlay, setIsPlay] = useState(false);\n\n\tconst onChangeTrack = (newIndex) =>{\n\t\tsetIndex(newIndex);\n\t}\n\n\tconst onChangePlay = (newIsPlay) => {\n\t\tsetIsPlay(newIsPlay);\n\t}\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Header tracks={tracks} index = {index} onChangeTrack={onChangeTrack} isPlay={isPlay}></Header>\n\t\t\t<AudioPlayer tracks={tracks} index = {index} onChangePlay={onChangePlay}></AudioPlayer>\n\t\t</div>\n\t)\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}